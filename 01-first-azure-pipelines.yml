# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#
#trigger:
#- main
#
#pool:
#  vmImage: ubuntu-latest
#
#steps:
#- script: echo Hello, world,change!
#  displayName: 'Run a one-line script'
#
#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

trigger:
  - main

pool:
  vmImage: ubuntu-latest

steps:
  # Install Terraform CLI (replaces TerraformInstaller task)
  - script: |
      set -e
      sudo apt-get update -y
      sudo apt-get install -y unzip wget curl
      TF_VER="1.6.0"
      echo "Downloading terraform ${TF_VER}..."
      wget -q "https://releases.hashicorp.com/terraform/${TF_VER}/terraform_${TF_VER}_linux_amd64.zip" -O /tmp/terraform.zip
      unzip -o /tmp/terraform.zip -d /tmp
      sudo mv /tmp/terraform /usr/local/bin/terraform
      sudo chmod +x /usr/local/bin/terraform
      terraform version
    displayName: 'Install Terraform CLI'

  # Start LocalStack in background (so terraform can talk to localhost:4566)
  - script: |
      docker run -d --name localstack -p 4566:4566 localstack/localstack
      echo "Waiting for LocalStack to become healthy..."
      for i in $(seq 1 30); do
        if curl -s http://localhost:4566/health | grep -q '"services"'; then
          echo "LocalStack is ready"
          break
        fi
        echo "Waiting... ($i)"
        sleep 2
      done
    displayName: 'Start LocalStack (Docker)'

  # Terraform init & plan
  - script: |
      terraform init -input=false
      terraform plan -out=tfplan -input=false
    displayName: 'Terraform Init & Plan'
    workingDirectory: $(System.DefaultWorkingDirectory)/terraform



  # Terraform apply
  - script: terraform apply -auto-approve tfplan
    displayName: 'Terraform Apply'
    workingDirectory: $(System.DefaultWorkingDirectory)/terraform


  # (Optional) Verify S3 via awscli pointed to LocalStack


  - script: |
      sudo apt-get install -y awscli
      aws --endpoint-url=http://localhost:4566 s3 ls
    displayName: 'Verify S3 (LocalStack)'

  # Destroy and cleanup (recommended for ephemeral runs)
  - script: |
      terraform destroy -auto-approve || true
      docker stop localstack || true
      docker rm localstack || true
    displayName: 'Terraform Destroy & Cleanup'


